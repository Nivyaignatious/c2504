QN 1. Find the Second Highest Salary
Problem: Given an `Employees` table
with columns `EmployeeID`, `Name`, and `Salary`,
find the second highest salary.

ANS :- select max (salary) as secondhighestsalary 
       from employees
       where salary < (select max(salary) from employees);  

Qn 2. Find the Average Salary by Department
Problem: Given an `Employees` table
with columns `EmployeeID`, `DepartmentID`, and `Salary`,
find the average salary for each department.

Table Structure:
```
CREATE TABLE Employees (
EmployeeID INT,
DepartmentID INT,
Salary DECIMAL(10, 2)
);

ANS:- select departmentid , avg(salary) as avg_salary
      from employees
      group by departmentid;

QN 3. Find Employees with No Manager
Problem:
Given an `Employees` table
with columns `EmployeeID`, `Name`, and `ManagerID`
(which refers to `EmployeeID` of the manager),
find all employees who do not have a manager.

Table Structure:
```
CREATE TABLE Employees (
EmployeeID INT,
Name VARCHAR(100),
ManagerID INT
);

ANS:- select employeeid , name 
      from employees
      where managerid is null;

QN 4. Find the Top N Salespersons by Sales
Problem:
Given a table `Sales`
with columns `SalesPersonID`, `SaleAmount`, and `SaleDate`,
find the top 3 salespersons by total sales amount.

Table Structure:
```
CREATE TABLE Sales (
SalesPersonID INT,
SaleAmount DECIMAL(10, 2),
SaleDate DATE
);

ANS :- select top 3 salespersonid , sum(saleamount)
       from sales
       group by salespersonid 
       order by sum(saleamount);

QN 5. Find Departments with No Employees
Problem: Given a `Departments` table and an `Employees` table,
find departments that do not have any employees.
Table Structure:
```
CREATE TABLE Departments (
DepartmentID INT,
DepartmentName VARCHAR(100)
);

CREATE TABLE Employees (
EmployeeID INT,
DepartmentID INT
);

ANS :- select d.departmentid, d.departmentname
       from departments d
       left join employees e on d.departmentid = e.departmentid
       where e.employeeid is null;
